#!/bin/bash

# -----------------------------------------------------------------------------
# Prepare env
# -----------------------------------------------------------------------------

export HOME=/root

syspath="$HOME/sys/modules"
log_file="$HOME/S42v-build_log"
kmodules="/lib/modules/`uname -r`/extra"

# enable messages lvl for printk
echo "7" > /proc/sys/kernel/printk

function kmsg() {
  printf "$1" > /dev/kmsg
}

function write_log() {
  printf "$1" >> $log_file
}

function start() {
# -----------------------------------------------------------------------------
# cp core files
# -----------------------------------------------------------------------------

cp /root/.bashrc $HOME/.bashrc
cp /root/.vimrc $HOME/.vimrc
cp /root/.Xresourses $HOME/.Xresourses

# -----------------------------------------------------------------------------
# create dep dirs
# -----------------------------------------------------------------------------

touch $log_file

mkdir -pv $syspath
mkdir -pv $HOME/temp
mkdir -pv $HOME/modules_temp

# -----------------------------------------------------------------------------
# Mount mtdblock1 (rootfs2) into /v-build/modules - read-only
# -----------------------------------------------------------------------------

mount -o ro /dev/mtdblock1 /$syspath

if [ $? -ne 0 ]; then
  kmsg "\nmount mtdblock1 error\n"
  write_log "\nmount mtdblock1 error\n"
  exit 100
fi

# -----------------------------------------------------------------------------
# DDI
# -----------------------------------------------------------------------------

for module in $syspath/*.ko
do
    module_name=$(basename $module)
    echo "$syspath/$module_name:" >> /lib/modules/`uname -r`/modules.dep
    kmsg "\nloading $module_name\n"
    write_log "\nloading $module_name\n"
    modprobe $module_name
done


}

case "$1" in
  start)
    start
    ;;
  stop)
    losetup -D
    umount -l /disk
    umount -a
    ;;
  *)
    #
    ;;
esac


