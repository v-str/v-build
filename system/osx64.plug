#   example
#
#   --begin
#   type = bin | script
#   command = function | script
#   exec = path from system dir to exec file
#   ret_val = void || int || bool || char* || text (script)
#   args = arg1, arg2, argN || no
#   desc = description
#   --end

--begin
type = bin
command = osx64_export_variables
exec = system/libs/libosx64_lib.so.1.0.0
ret_val = void
args = no
desc = export variables for building os ( ! for CURRENT directory ! )
--end

--begin
type = bin
command = osx64_export_linux_kernel
exec = system/libs/libosx64_lib.so.1.0.0
ret_val = void
args = char*
desc = export kernel directory ( absolute path )
--end

--begin
type = script
command = osx64_check_variables
exec = system/scripts/osx64/common/check_export_vars.sh
ret_val = void
args = no
desc = check assigned variables
--end

--begin
type = script
command = osx64_check_host
exec = system/scripts/osx64/common/check_host.sh
ret_val = void
args = no
desc = check host building compatibility
--end

--begin
type = script
command = osx64_download
exec = system/scripts/osx64/common/download.sh
ret_val = void
args = no
desc = download packages and patches
--end

--begin
type = script
command = osx64_extract
exec = system/scripts/osx64/common/extract_archives.sh
ret_val = void
args = no
desc = extract archives
--end

--begin
type = script
command = osx64_construct_tree
exec = system/scripts/osx64/toolchain/create_os_tree_x86_64.sh
ret_val = void
args = no
desc = create build tree
--end

--begin
type = script
command = osx64_build_toolchain
exec = system/scripts/osx64/toolchain/build_toolchain.sh
ret_val = void
args = no
desc = build binutils, gcc, libstd, etc.
--end

--begin
type = script
command = chroot
exec = system/scripts/osx64/root_deps/chroot.sh
ret_val = void
args = no
desc = chroot into tree for build system
--end
